{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","aws-exports.js","index.js"],"names":["App","useState","coins","updateCoins","limit","start","input","updateInput","loading","updateLoading","updateInputValues","type","value","fetchCoins","a","API","get","data","useEffect","className","placeholder","onChange","e","target","onClick","map","coin","index","name","symbol","price_usd","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","awsmobile","Amplify","configure","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAAe,I,sBCoFAA,EA9EH,WAGV,MAA6BC,mBAAS,IAAtC,mBAAOC,EAAP,KAAcC,EAAd,KAGA,EAA6BF,mBAAS,CAAEG,MAAO,EAAGC,MAAO,IAAzD,mBAAOC,EAAP,KAAcC,EAAd,KAGC,EAAiCN,oBAAS,GAA1C,mBAAOO,EAAP,KAAgBC,EAAhB,KAGD,SAASC,EAAkBC,EAAMC,GAC/BL,EAAY,2BAAKD,GAAN,kBAAcK,EAAOC,KAIhC,IAAMC,EAAU,uCAAG,gCAAAC,EAAA,6DACjBL,GAAc,GACNL,EAAiBE,EAAjBF,MAAOC,EAAUC,EAAVD,MAFE,SAGEU,IAAIC,IAAI,YAAR,uBAAqCZ,EAArC,kBAAoDC,IAHtD,OAGXY,EAHW,OAIjBd,EAAYc,EAAKf,OACjBO,GAAc,GALG,2CAAH,qDAahB,OAJAS,qBAAU,WACRL,MACC,IAGD,sBAAKM,UAAU,MAAf,UAIE,uBACEC,YAAY,QACZC,SAAU,SAAAC,GAAC,OAAIZ,EAAkB,QAASY,EAAEC,OAAOX,UAGrD,uBACES,SAAU,SAAAC,GAAC,OAAIZ,EAAkB,QAASY,EAAEC,OAAOX,QACnDQ,YAAY,UAId,wBAAQI,QAASX,EAAjB,yBAECL,GAAW,6CAGTA,GAAWN,EAAMuB,KAAI,SAACC,EAAMC,GAAP,OACpB,gCACA,+BAAKD,EAAKE,KAAV,MAAmBF,EAAKG,UACxB,mCAAMH,EAAKI,eAFDH,UC9CPI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCQCQ,EAZG,CACd,mBAAsB,YACtB,uBAA0B,CACtB,CACI,KAAQ,YACR,SAAY,+DACZ,OAAU,e,MCFtBC,QAAQC,UAAUC,GAElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BjB,K","file":"static/js/main.4282d173.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { API } from 'aws-amplify';\nimport './App.css';\n\nconst App = () => {\n\n  // Create coins variable ans set to empty array\n  const [coins, updateCoins] = useState([])\n\n  // Create additional state to hold user input for the limit and start properties\n  const [input, updateInput] = useState({ limit: 5, start: 0 })\n\n   // Create a variable for loading\n   const [loading, updateLoading] = useState(true);\n\n  // Create a new function to allow users to update the input values\n  function updateInputValues(type, value) {\n    updateInput({ ...input, [type]: value })\n  }\n\n    // Define function to all API\n    const fetchCoins = async() => {\n      updateLoading(true);\n      const { limit, start } = input;\n      const data = await API.get('cryptoapi', `/coins?limit=${limit}&start=${start}`);\n      updateCoins(data.coins);\n      updateLoading(false);\n    }\n\n    // Call fetchCoins function when the component loads\n    useEffect(() => {\n      fetchCoins()\n    }, [])\n\n    return (\n      <div className=\"App\">\n\n        {/* Add input fields to the UI for user input */}\n        \n        <input\n          placeholder=\"start\"\n          onChange={e => updateInputValues('start', e.target.value)}\n        />\n\n        <input\n          onChange={e => updateInputValues('limit', e.target.value)}\n          placeholder=\"limit\"\n        />\n\n        {/* Add button to the UI to give user the option to call the API */}\n        <button onClick={fetchCoins}>Fetch Coins</button>\n\n        {loading && <h2>Loading...</h2>}\n\n        {\n          !loading && coins.map((coin, index) => (\n            <div key={index}>\n            <h2>{coin.name} - {coin.symbol}</h2>\n            <h5>${coin.price_usd}</h5>\n            </div>\n          ))\n        }\n\n\n        {/* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header> */}\n      </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-2\",\n    \"aws_cloud_logic_custom\": [\n        {\n            \"name\": \"cryptoapi\",\n            \"endpoint\": \"https://hc0g2i1vhc.execute-api.us-east-2.amazonaws.com/local\",\n            \"region\": \"us-east-2\"\n        }\n    ]\n};\n\n\nexport default awsmobile;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Amplify from 'aws-amplify';\nimport config from './aws-exports';\nAmplify.configure(config);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}